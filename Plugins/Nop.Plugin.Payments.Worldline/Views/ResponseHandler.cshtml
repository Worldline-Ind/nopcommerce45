@inject Nop.Core.IWebHelper webHelper
@{
    Layout = "";
    var returl = $"{webHelper.GetStoreLocation()}Plugins/Worldline/responseHandler";
    var jsLink = $"{webHelper.GetStoreLocation()}Plugins/Worldline/js/jquery.unobtrusive-ajax.min.js";
    //    var returl = $"{webHelper.GetStoreLocation()}checkout/OpcSavePaymentInfo";
}

<script src="@jsLink"></script>
<table width="100%" cellpadding="0" cellspacing="0">
    <tr>
        <td>
            <p><b>Hi @T("Plugins.Payments.Worldline.Fields.RedirectionTip")</b></p>
        </td>
    </tr>
</table>
@ViewBag.debitEndDate
@ViewBag.ordTtl
@ViewBag.tranId
<div id="frmid"></div>

<form id="form" action="#" accept-charset="UTF-8" method="post" data-ajax="true" data-ajax-mode="replace" data-ajax-url="http://localhost:44369/Plugins/PaymentWorldline/responseHandler" data-ajax-update="#frmid" enctype="multipart/form-data">
    <input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" id="authenticity_token" value="" />

    <input type="hidden" name="mrctCode" id="mrctCode" value="T3348" />

    <input type="hidden" name="txn_id" id="txn_id" value="@ViewBag.tranId" />

    <input type="hidden" name="amount" id="amount" value="@ViewBag.ordTtl" />
    <input type="hidden" name="scheme" id="scheme" value="test" />
    <input type="hidden" name="custID" id="custID" value="@ViewBag.custId" />
    <input type="hidden" name="mobNo" id="mobNo" />
    <input type="hidden" name="email" id="email" /> </td>
    </tr>

    <input type="hidden" name="name" id="name" />
    <input type="hidden" name="currency" id="currency" value="INR" />
    <input type="hidden" name="SALT" id="SALT" value="1496899267KMOWJE" />

    <input type="hidden" name="returnUrl" id="returnUrl" value="@returl" />
    @*http://192.168.1.84:8088/nopcommWorldline/Response/responseHandler*@
    <input type="hidden" name="accNo" id="accNo" />
    <input type="hidden" name="debitStartDate" id="debitStartDate" value="10-03-2021" />
    <input type="hidden" name="debitEndDate" id="debitEndDate" value="01-03-2047" />
    <input type="hidden" name="maxAmount" id="maxAmount" value="1000" />
    <input type="hidden" name="amountType" id="amountType" value="M" />
    <input type="hidden" name="frequency" id="frequency" value="ADHO" />
    <input type="hidden" name="cardNumber" id="cardNumber" />
    <input type="hidden" name="expMonth" id="expMonth" />
    <input type="hidden" name="expYear" id="expYear" />
    <input type="hidden" name="cvvCode" id="cvvCode" />
    <input type="hidden" name="config_data" id="config_data" value="" />


    @*<tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td> <label for="accNo">Account No</label> </td>
                    <td><input type="text" id="accNo" name="accNo" /> </td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="accountType">Account Type</label></td>
                    <td>
                        <select id="accountType" name="accountType" style="width:100%">
                            <option value="Saving">Saving</option>
                            <option value="Current">Current</option>
                        </select>
                    </td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="accountHolderName">Account Name</label></td>
                    <td><input type="text" id="accountHolderName" name="accountHolderName" /> </td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="aadharNo">Aadhar No</label></td>
                    <td><input type="text" id="aadharNo" name="aadharNo" /> </td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="ifscCode">IFSC Code</label></td>
                    <td><input type="text" id="ifscCode" name="ifscCode" /></td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="debitStartDate">Debit Start Date</label></td>
                    <td><input type="date" id="debitStartDate" name="debitStartDate" value="@ViewBag.debitStartDate" style="width:100%" /></td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="debitEndDate">Debit End Date</label></td>
                    <td><input type="date" id="debitEndDate" name="debitEndDate" value="@ViewBag.debitEndDate" style="width:100%" /></td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="maxAmount">Max Amount</label></td>
                    <td><input type="text" id="maxAmount" name="maxAmount" /></td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label for="amountType">Amount Type</label></td>
                    <td>
                        <select id="amountType" name="amountType" style="width:100%">
                            <option value="M">Variable</option>
                            <option value="F">Fixed</option>
                        </select>
                    </td>
                </tr>
                <tr class="@(ViewBag.enbSi ? Html.Raw("show") : Html.Raw("hid"))">
                    <td><label>Frequency</label></td>
                    <td>
                        <select id="frequency" name="frequency" style="width:100%">
                            <option value="ADHO" selected> As and when presented </option>
                            <option value="DAIL"> Daily </option>
                            <option value="WEEK"> Weekly </option>
                            <option value="MNTH"> Monthly </option>
                            <option value="BIMN"> Bi- monthly </option>
                            <option value="QURT"> Quarterly </option>
                            <option value="MIAN"> Semi annually </option>
                            <option value="YEAR"> Yearly </option>
                        </select>
                    </td>
                </tr>
            </tbody>
        </table>*@

    @*<input type="hidden" name="accNo" id="accNo" />
            <input type="hidden" name="debitStartDate" id="debitStartDate" value="@ViewBag.debitStartDate" />
            <input type="hidden" name="debitEndDate" id="debitEndDate" value="@ViewBag.debitEndDate" />
            <input type="hidden" name="maxAmount" id="maxAmount" value="" />
            <input type="hidden" name="amountType" id="amountType" value="M"/>
            <input type="hidden" name="frequency" id="frequency" value="ADHO" />
        <input type="hidden" name="cardNumber" id="cardNumber" />
        <input type="hidden" name="expMonth" id="expMonth" />
        <input type="hidden" name="expYear" id="expYear" />
        <input type="hidden" name="cvvCode" id="cvvCode" />
        <input type="hidden" name="config_data" id="config_data" value="" />*@

    <div><input type="submit" class="btn btn-primary" name="commit" value="Save" id="btnSubmit" data-disable-with="Save" /></div>
    <div id="worldline_embeded_popup"></div>
</form>

<script type="text/javascript" src="https://www.paynimo.com/Paynimocheckout/server/lib/checkout.js"></script>
<script type="text/javascript">
$(document).ready(function () {

    function handleResponse(res) {
        if (typeof res != 'undefined' && typeof res.paymentMethod != 'undefined' && typeof res.paymentMethod.paymentTransaction != 'undefined' && typeof res.paymentMethod.paymentTransaction.statusCode != 'undefined' && res.paymentMethod.paymentTransaction.statusCode == '0300') {
            // success block
            alert("success");
        } else if (typeof res != 'undefined' && typeof res.paymentMethod != 'undefined' && typeof res.paymentMethod.paymentTransaction != 'undefined' && typeof res.paymentMethod.paymentTransaction.statusCode != 'undefined' && res.paymentMethod.paymentTransaction.statusCode == '0398') {
            // initiated block
            alert("initiated");
        } else {
            // error block
            alert("error");
        }
    };

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1 ),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        //  alert([day, month, year].join('-'));
        return [day, month, year].join('-');
    };

    $(document).off('click', '#btnSubmit').on('click', '#btnSubmit', function (e) {
        e.preventDefault();
        var jsonVals = JSON.parse('@Html.Raw(ViewBag.config_data)');
        //  alert(jsonVals['disclaimerMessage']);
    //      alert(document.getElementById("mrctCode").value);
        var maxAmt = document.getElementById("amount").value*2 ;
        //  alert(maxAmt);
        //document.getElementById("maxAmount").value
        var inputString = document.getElementById("mrctCode").value + "|" + document.getElementById("txn_id").value + "|" + document.getElementById("amount").value + "|" + document.getElementById("accNo").value + "|" + document.getElementById("custID").value + "|" + document.getElementById("mobNo").value + "|" + document.getElementById("email").value + "|" + formatDate(document.getElementById("debitStartDate").value) + "|" + formatDate(document.getElementById("debitEndDate").value) + "|" + maxAmt + "|" + document.getElementById("amountType").value + "|" + document.getElementById("frequency").value + "|" + document.getElementById("cardNumber").value + "|" + document.getElementById("expMonth").value + "|" + document.getElementById("expYear").value + "|" + document.getElementById("cvvCode").value + "|" + document.getElementById("SALT").value;
        var clientStuff = "";

        $.ajax({
            type: 'GET',
            url: '@Url.Action("GenerateSHA512String", "Home")',
            data: { inputString: inputString},
            dataType: "json",
            cache: false,
            async: false,
            success: function (data) {
                clientStuff = data;
                document.getElementById("authenticity_token").value = clientStuff;
                jsonVals['authenticity_token'] = clientStuff;
                var myJSON = JSON.stringify(jsonVals);
                document.getElementById("config_data").value = myJSON;
                //  alert(formatDate(document.getElementById("debitEndDate").value));
                //  alert(document.getElementById("config_data").value);
            },
            error: function(errorMsg) {
                alert(errorMsg);
            }
        });
        const valueB = 'false';

        var pgrMsg = (jsonVals['showPGResponseMsg'] == valueB) ? false : (jsonVals['showPGResponseMsg'] != valueB) ? true : true;
        var abrtResp = (jsonVals['enableAbortResponse'] == valueB) ? false : (jsonVals['enableAbortResponse'] != valueB) ? true : true;
        var expPay = (jsonVals['enableExpressPay'] == valueB) ? false : (jsonVals['enableExpressPay'] != valueB) ? true : true;
        var newWinFlow = (jsonVals['enableNewWindowFlow'] == valueB) ? false : (jsonVals['enableNewWindowFlow'] != valueB) ? true : true;

        var paymentModeOrder = jsonVals['paymentModeOrder'].replace(" ", "");
        var paymentModeOrderArr = paymentModeOrder.split(",");
        var embdPmntGtway = (jsonVals['embedPaymentGatewayOnPage'] == valueB) ? "" : (jsonVals['enableNewWindowFlow'] != valueB) ? "#worldline_embeded_popup" : "";
        var configJson = {
            "tarCall": false,
            "features": {
                "showPGResponseMsg": pgrMsg,
                "enableAbortResponse": abrtResp,
                "enableExpressPay": expPay,
                "enableNewWindowFlow": newWinFlow,
            },
            "consumerData":
            {
                "deviceId": "WEBSH2",
                "token": clientStuff,
                "returnUrl": document.getElementById("returnUrl").value,
                "paymentMode": jsonVals['paymentMode'],
                "paymentModeOrder": paymentModeOrderArr,
                "checkoutElement": embdPmntGtway,
                "merchantLogoUrl": "https://www.paynimo.com/CompanyDocs/company-logo-md.png",
                "merchantId": document.getElementById("mrctCode").value,
                "merchantMsg": jsonVals['merchantMessage'],
                "disclaimerMsg": jsonVals['disclaimerMessage'],
                "currency": document.getElementById("currency").value,
                "consumerId": document.getElementById("custID").value,
                "consumerMobileNo": document.getElementById("mobNo").value,
                "consumerEmailId": document.getElementById("email").value,
                "txnId": document.getElementById("txn_id").value,
                "items": [{
                    "itemId": document.getElementById("scheme").value,
                    "amount": document.getElementById("amount").value, "comAmt": "0"
                }],
                "customStyle":
                {
                    "PRIMARY_COLOR_CODE": jsonVals['primaryColor'],
                    "SECONDARY_COLOR_CODE": jsonVals['secondaryColor'],
                    "BUTTON_COLOR_CODE_1": jsonVals['buttonColor1'],
                    "BUTTON_COLOR_CODE_2": jsonVals['buttonColor2']
                },
                "debitStartDate": formatDate(document.getElementById("debitStartDate").value),
                "debitEndDate": formatDate(document.getElementById("debitEndDate").value),
                "maxAmount": maxAmt,
                "amountType": "M",
                "frequency": "ADHO"
            }
        }

        var myJSON = JSON.stringify(configJson);
    //    document.getElementById("test34").innerText = myJSON;

    //    console.log(myJSON);

    //     alert(configJson);
        $.pnCheckout(configJson);
        if (configJson.features.enableNewWindowFlow) {
            pnCheckoutShared.openNewWindow();
        }
    });
});
</script>